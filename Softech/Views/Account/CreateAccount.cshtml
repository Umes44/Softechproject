@model Softech.Models.ViewModels.AccountVM

@{
    ViewBag.Title = "Create Account";
}
<script src="https://code.jquery.com/jquery-3.3.1.slim.js"
        integrity="sha256-fNXJFIlca05BIO2Y5zh1xrShK3ME+/lYZ0j+ChxX2DA="
        crossorigin="anonymous"></script>
@if (TempData["SM"] != null)
{
    <div class="alert alert-success">
        @TempData["SM"]
    </div>
}
<h2>CreateAccount</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
    
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2">FirstName</label>

            <div class="col-md-2">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>

            <label class="control-label col-md-2">LastName</label>
            <div class="col-md-2">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
            <label class="control-label col-md-2">UserName</label>
            <div class="col-md-2">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="Name">Email Address</label>
            <div class="col-md-2">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
  
            <label class="control-label col-md-2">Age</label>
            <div class="col-md-2">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
      
            <label class="control-label col-md-2">Gender</label>
            <div class="col-md-2">
                @Html.DropDownListFor(model => model.Gender, Softech.Utility.Utility.GetGenderList(), "Select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <label class="control-label col-md-2">Password</label>
            <div class="col-md-2">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Confirm Password</label>
            <div class="col-md-2">
                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create Account" class="btn btn-default" />
            </div>
        </div>
    </div>
}
    <script>
        $("#Age").on("change", function () {
            var currentage = $("#Age").val();
            if (currentage < 0) {
                alert("No Negative Age")
            }
            else if (currentage < 20)
            {
                alert("Not Qualified")
            }
    });
    </script>

